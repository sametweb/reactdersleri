// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("HEROKU_POSTGRESQL_COPPER_URL")
}

model Post {
  id         Int       @id @default(autoincrement())
  title      String    @db.VarChar(255)
  slug       String    @unique @db.VarChar(255)
  content    String?
  videoUrl   String?
  imageUrl   String?   @db.Text
  published  Boolean   @default(false)
  author     User      @relation(fields: [authorId], references: [id])
  authorId   String
  playlist   Playlist? @relation(fields: [playlistId], references: [id])
  playlistId Int?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  @@index([slug])
}

model Playlist {
  id        Int      @id @default(autoincrement())
  title     String   @db.VarChar(255)
  slug      String   @unique @db.VarChar(255)
  imageUrl  String?  @db.Text
  posts     Post[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([slug])
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  posts         Post[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
